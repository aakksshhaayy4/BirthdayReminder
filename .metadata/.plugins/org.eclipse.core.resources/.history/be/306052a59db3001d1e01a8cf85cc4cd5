package com.codewithakshay.birthdayreminder.postgres.component;

import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;
import java.util.Optional;

import javax.mail.MessagingException;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.scheduling.annotation.Scheduled;
import org.springframework.stereotype.Component;

import com.codewithakshay.birthdayreminder.postgres.model.Birthday;
import com.codewithakshay.birthdayreminder.postgres.model.Email;
import com.codewithakshay.birthdayreminder.postgres.model.EmailTemplates;
import com.codewithakshay.birthdayreminder.postgres.repository.EmailTemplateRepository;
import com.codewithakshay.birthdayreminder.postgres.service.BirthdayService;
import com.codewithakshay.birthdayreminder.postgres.service.EmailService;

@Component
public class ScheduledTasks {

	private static final SimpleDateFormat dateFormat = new SimpleDateFormat("MM/dd/yyyy HH:mm:ss");

	@Autowired
	private BirthdayService birthdaySerive;

	@Autowired
	private EmailService emailService;

	@Autowired
	private EmailTemplateRepository emailTemplateRepository;

	@Scheduled(cron = "0 0 0 * * *")
	public void birthdayCheckCron() throws MessagingException {
		String message = null;
		List<Birthday> todaysBithdays = birthdaySerive.getTodaysBithdays();
		if (!todaysBithdays.isEmpty()) {
			Optional<EmailTemplates> emailTemplate = emailTemplateRepository.findById(1L);
			for (Birthday birthday : todaysBithdays) {
				String name = birthday.getName();
				Long contactNumber = birthday.getContact().getContactNumber();
				String emailId = birthday.getContact().getEmailId();
				Email email = emailService.setEmailDetails(name, emailId, null);
				message = emailService.sendEMail(email);
				if (message != null) {

				}
			}
		}
		System.out.println("here is the cron executed at : " + dateFormat.format(new Date()) + " and today bbirthday : "
				+ todaysBithdays);
	}

}
