package com.codewithakshay.birthdayreminder.postgres.serviceimpl;

import java.util.List;
import java.util.Optional;

import javax.mail.MessagingException;
import javax.mail.internet.InternetAddress;
import javax.mail.internet.MimeMessage;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.mail.SimpleMailMessage;
import org.springframework.mail.javamail.JavaMailSender;
import org.springframework.mail.javamail.MimeMessageHelper;
import org.springframework.stereotype.Service;

import com.codewithakshay.birthdayreminder.postgres.model.Email;
import com.codewithakshay.birthdayreminder.postgres.model.EmailTemplates;
import com.codewithakshay.birthdayreminder.postgres.repository.EmailTemplateRepository;
import com.codewithakshay.birthdayreminder.postgres.service.EmailService;

@Service
public class EmailServiceImpl implements EmailService {

	@Value("${spring.mail.username}")
	public String fromMail;

	@Autowired
	private JavaMailSender emailSender;

	@Autowired
	private EmailTemplateRepository emailTemplateRepository;

	@Override
	public String sendEMail(Email email) throws MessagingException {
		String message = null;
		Optional<EmailTemplates> emailTemplate = emailTemplateRepository.findById(1L);
		if (email.getAttachments().isEmpty())
			message = sendSimpleMail(email.getToEmail(), fromMail, emailTemplate.get().getMessage(),
					emailTemplate.get().getSubject());
		else

			return message;
	}

	public String sendSimpleMail(List<String> toEmail, String fromEMail, String body, String subject)
			throws MessagingException {
//		SimpleMailMessage message = new SimpleMailMessage();
		MimeMessage message = emailSender.createMimeMessage();
		MimeMessageHelper helper = new MimeMessageHelper(message, true);
		helper.setFrom(fromEMail);
		helper.setSubject(subject);
		helper.setTo((InternetAddress[]) toEmail.toArray());
		helper.setText(body);
		emailSender.send(message);
		return "Email Sent Successfully";
	}
}
